# do not modify these
root: ./
name: simulation
socket_name: mrs
attach: false
tmux_options: -f /etc/ctu-mrs/tmux.conf
# you can modify these
pre_window: export RUN_TYPE=simulation; export UAV_TYPE=f450; export PLATFORM_CONFIG=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml; export CUSTOM_CONFIG=./config/custom_config.yaml; export WORLD_CONFIG=./config/world_config.yaml; export NETWORK_CONFIG=./config/network_config.yaml; export SENSORS="garmin_down"
startup_window: status
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - rosbridge:
      layout: tiled
      panes:
        - waitForRos; roslaunch rosbridge_server rosbridge_websocket.launch
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_uav_gazebo_simulation simulation.launch world_name:=grass_plane gui:=true
        - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "1 --$UAV_TYPE --enable_bluefox_camera --enable-ground-truth --pos 0 7.5 0 0"
        - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "2 --$UAV_TYPE --enable_bluefox_camera --enable-ground-truth --pos 0 2.5 0 0"
        - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "3 --$UAV_TYPE --enable_bluefox_camera --enable-ground-truth --pos 0 -2.5 0 0"
        - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "4 --$UAV_TYPE --enable_bluefox_camera --enable-ground-truth --pos 0 -7.5 0 0"
        #- waitForControl; gz camera -c gzclient_camera -f $UAV_NAME; history -s gz camera -c gzclient_camera -f $UAV_NAME
  - status:
      layout: tiled
      panes:
        #- waitForHw; roslaunch mrs_uav_status status.launch
  - hw_api:
      layout: tiled
      panes:
        -  export UAV_NAME=uav1; waitForTime; roslaunch mrs_uav_px4_api api.launch
        -  export UAV_NAME=uav2; waitForTime; roslaunch mrs_uav_px4_api api.launch
        -  export UAV_NAME=uav3; waitForTime; roslaunch mrs_uav_px4_api api.launch
        -  export UAV_NAME=uav4; waitForTime; roslaunch mrs_uav_px4_api api.launch
  - core:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForHw; roslaunch mrs_uav_core core.launch
          platform_config:=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml
          custom_config:=./config/custom_config.yaml
          world_config:=./config/world_config.yaml
          network_config:=./config/network_config.yaml
        - export UAV_NAME=uav2; waitForHw; roslaunch mrs_uav_core core.launch
          platform_config:=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml
          custom_config:=./config/custom_config.yaml
          world_config:=./config/world_config.yaml
          network_config:=./config/network_config.yaml
        - export UAV_NAME=uav3; waitForHw; roslaunch mrs_uav_core core.launch
          platform_config:=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml
          custom_config:=./config/custom_config.yaml
          world_config:=./config/world_config.yaml
          network_config:=./config/network_config.yaml
        - export UAV_NAME=uav4; waitForHw; roslaunch mrs_uav_core core.launch
          platform_config:=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml
          custom_config:=./config/custom_config.yaml
          world_config:=./config/world_config.yaml
          network_config:=./config/network_config.yaml
  - automatic_start:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - export UAV_NAME=uav2; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - export UAV_NAME=uav3; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - export UAV_NAME=uav4; waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
  - takeoff:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard
        - export UAV_NAME=uav2; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard
        - export UAV_NAME=uav3; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard
        - export UAV_NAME=uav4; waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard
  - layout:
      layout: tiled
      panes:
        - waitForControl; sleep 3; ~/.i3/layout_manager.sh ./layout.json
